from Spotfire.Dxp.Data import DataType, AddRowsSettings
from Spotfire.Dxp.Data.Import import TextFileDataSource, TextDataReaderSettings
from System import MemoryStream, StreamWriter, SeekOrigin, TimeSpan

def add_outage_scenario(sender, args):
    # Get the document properties
    doc_properties = {
        "PlatformShutdownDate": DataType.DateTime,
        "PlatformShutdownPeriod": DataType.TimeSpan,
        "PlatformOfflineDate": DataType.DateTime,
        "PlatformOfflinePeriod": DataType.TimeSpan,
        "PlatformRestartDate": DataType.DateTime,
        "PlatformRestartPeriod": DataType.TimeSpan,
        "PlatformBackOnlineDate": DataType.DateTime,
        "RefineryShutdownDate": DataType.DateTime,
        "RefineryShutdownPeriod": DataType.TimeSpan,
        "RefineryOfflineDate": DataType.DateTime,
        "RefineryOfflinePeriod": DataType.TimeSpan,
        "RefineryRestartDate": DataType.DateTime,
        "RefineryRestartPeriod": DataType.TimeSpan,
        "RefineryBackOnlineDate": DataType.DateTime,
        "ScenarioName": DataType.String,
        "ScenarioCreatedDate": DataType.DateTime,
        "ScenarioDescription": DataType.String
    }
    
    # Retrieve values from the document properties and cast where necessary
    values = []
    for prop, dtype in doc_properties.items():
        value = Document.Properties[prop]
        if dtype == DataType.TimeSpan:
            value = value.Days  # Convert TimeSpan to integer number of days
        values.append(value)
    
    # Create the new row data in CSV format
    csv_data = ",".join(str(v) for v in values) + "\n"
    
    # Memory stream setup
    stream = MemoryStream()
    writer = StreamWriter(stream)
    writer.Write("PLATFORM_SHUTDOWN_DATE,PLATFORM_SHUTDOWN_PERIOD,PLATFORM_OFFLINE_DATE,PLATFORM_OFFLINE_PERIOD,"
                 "PLATFORM_RESTART_DATE,PLATFORM_RESTART_PERIOD,PLATFORM_BACK_ONLINE_DATE,REFINERY_SHUTDOWN_DATE,"
                 "REFINERY_SHUTDOWN_PERIOD,REFINERY_OFFLINE_DATE,REFINERY_OFFLINE_PERIOD,REFINERY_RESTART_DATE,"
                 "REFINERY_RESTART_PERIOD,REFINERY_BACK_ONLINE_DATE,SCENARIO_NAME,SCENARIO_CREATED_DATE,SCENARIO_DESCRIPTION\n")
    writer.Write(csv_data)
    writer.Flush()
    stream.Seek(0, SeekOrigin.Begin)
    
    # Define reader settings
    reader_settings = TextDataReaderSettings()
    reader_settings.Separator = ","
    reader_settings.AddColumnNameRow(0)  # Add the column name row index

    # Set data types for each column
    data_types = [
        DataType.DateTime, DataType.Integer, DataType.DateTime, DataType.Integer, 
        DataType.DateTime, DataType.Integer, DataType.DateTime, DataType.DateTime, 
        DataType.Integer, DataType.DateTime, DataType.Integer, DataType.DateTime, 
        DataType.Integer, DataType.DateTime, DataType.String, DataType.DateTime, DataType.String
    ]

    for i, data_type in enumerate(data_types):
        reader_settings.SetDataType(i, data_type)

    # Create the data source from the stream
    text_data_source = TextFileDataSource(stream, reader_settings)
    
    # Define add rows settings
    data_table = Document.Data.Tables["OutageScenarios"]
    add_rows_settings = AddRowsSettings(data_table, text_data_source)
    
    # Add the rows to the data table
    data_table.AddRows(text_data_source, add_rows_settings)

# Link this function to a button for execution in the Spotfire Analyst client
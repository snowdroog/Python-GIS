# Assuming the data frame is loaded as df
# df <- GENSCAPE_STORAGE_REPORT

# Ensure Sys.Date is being called correctly and convert to POSIXct for compatibility if needed
current_date <- as.POSIXct(base::Sys.Date(), tz = "GMT")  # Using GMT for consistency, adjust timezone as needed

# Calculate the date one year ago in POSIXct format
one_year_ago <- current_date - (365 * 24 * 60 * 60)  # Subtract seconds equivalent to one year

# Filter records from the last year by converting ReportDate to POSIXct if not already
last_year_data <- df[as.POSIXct(df$ReportDate, tz = "GMT") >= one_year_ago, ]

# Calculate min and max storage, ensuring date conversions are handled similarly
calculate_min_max <- function(data) {
  results <- data.frame()
  for (year_offset in 0:3) {
    year_start <- as.POSIXct(format(as.Date(Sys.Date() - 365 * year_offset), "%Y-01-01"), tz = "GMT")
    year_end <- as.POSIXct(format(as.Date(Sys.Date() - 365 * year_offset), "%Y-12-31"), tz = "GMT")
    
    # Filter data for the specific year, ensuring date format is correct
    yearly_data <- data[as.POSIXct(data$ReportDate, tz = "GMT") >= year_start & as.POSIXct(data$ReportDate, tz = "GMT") <= year_end, ]
    
    # Aggregate data by month and region
    for (month in 1:12) {
      month_start <- as.POSIXct(paste(format(year_start, "%Y"), month, "01", sep="-"), tz = "GMT")
      month_end <- as.POSIXct(paste(format(year_end, "%Y"), month, "28", sep="-"), tz = "GMT") + (3 * 24 * 60 * 60)  # To cover months ending in 30 or 31
      
      month_data <- yearly_data[as.POSIXct(yearly_data$ReportDate, tz = "GMT") >= month_start & as.POSIXct(yearly_data$ReportDate, tz = "GMT") <= month_end, ]
      
      if (nrow(month_data) > 0) {
        for (region in unique(month_data$Region)) {
          region_data <- month_data[month_data$Region == region, ]
          min_storage <- min(region_data$StorageAmount, na.rm = TRUE)
          max_storage <- max(region_data$StorageAmount, na.rm = TRUE)
          
          results <- rbind(results, data.frame(
            ReportDate = month_start,
            Region = paste(region, "4YearMin", sep = "_"),
            StorageAmount = min_storage
          ))
          
          results <- rbind(results, data.frame(
            ReportDate = month_start,
            Region = paste(region, "4YearMax", sep = "_"),
            StorageAmount = max_storage
          ))
        }
      }
    }
  }
  results
}

# Call the function on the original dataset
min_max_data <- calculate_min_max(df)

# Combine data from the last year and the calculated min/max values
StorageReport <- rbind(last_year_data, min_max_data)

# Print output to check
print(head(StorageReport))
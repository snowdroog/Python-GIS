from Spotfire.Dxp.Application.Visuals import VisualContent
from System.Collections.Generic import List

# Function to get marked items from a specific marking
def get_marked_items(marking, column_name):
    data_table = Document.Data.Tables["PLATFORM_LOCATIONS"]
    rows = data_table.GetRows(marking.GetSelection(data_table).AsIndexSet(), List[str]([column_name]))
    marked_items = set()
    while rows.MoveNext():
        row = rows.Current
        marked_items.add(row[column_name])
    print("Marked items: ", marked_items)  # Debug statement
    return marked_items

# Function to update document properties and ensure no duplication
def update_document_properties(doc_properties, new_values, prop_to_update):
    print(f"Updating {prop_to_update} with {new_values}")  # Debug statement
    doc_properties[prop_to_update] = ';'.join(new_values)
    
    all_values = set()
    all_props = ['PlatformListOutageScenario1', 'PlatformListOutageScenario2', 'PlatformListOutageScenario3']
    for prop in all_props:
        if prop != prop_to_update:
            all_values.update(doc_properties[prop].split(';'))
    
    for prop in all_props:
        if prop != prop_to_update:
            existing_values = set(doc_properties[prop].split(';'))
            updated_values = existing_values - new_values
            doc_properties[prop] = ';'.join(updated_values)
            print(f"Updated {prop}: {updated_values}")  # Debug statement

# Main script entry
def marking_changed(marking_name, column_name, doc_property_name):
    marking = Document.ActiveMarkingSelectionReference.GetMarking(marking_name)
    new_marked_items = get_marked_items(marking, column_name)
    update_document_properties(Document.Properties, new_marked_items, doc_property_name)

# Example usage: Call this function whenever a marking is updated
# marking_changed('Marking1', 'PlatformName', 'PlatformListOutageScenario1')
# marking_changed('Marking2', 'PlatformName', 'PlatformListOutageScenario2')
# marking_changed('Marking3', 'PlatformName', 'PlatformListOutageScenario3')
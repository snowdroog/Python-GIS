import requests

def fetch_dataverse_data(api_url: str, params: dict = None, headers: dict = None) -> dict:
    """
    Fetch data from the given Dataverse API endpoint.
    
    :param api_url: The URL of the Dataverse API endpoint.
    :param params: Optional query parameters to include in the request.
    :param headers: Optional headers to include in the request.
    :return: The JSON response from the API as a dictionary.
    """
    try:
        # Make the GET request to the API endpoint
        response = requests.get(api_url, params=params, headers=headers)
        
        # Raise an exception for HTTP errors
        response.raise_for_status()
        
        # Return the JSON content of the response
        return response.json()
    except requests.exceptions.HTTPError as http_err:
        print(f"HTTP error occurred: {http_err}")
    except Exception as err:
        print(f"Other error occurred: {err}")
    return {}

if __name__ == "__main__":
    # Replace with your Dataverse API endpoint URL
    api_url = "https://your-dataverse-instance/api/endpoint"

    # Optional query parameters
    params = {
        'key1': 'value1',
        'key2': 'value2'
    }
    
    # Optional headers
    headers = {
        'User-Agent': 'python-requests/2.25.1'
    }

    # Fetch the data from the API
    data = fetch_dataverse_data(api_url, params=params, headers=headers)
    
    # Print the fetched data
    print(data)
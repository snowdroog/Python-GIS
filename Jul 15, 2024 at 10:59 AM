from Spotfire.Dxp.Application.Visuals import TablePlot
from Spotfire.Dxp.Data import DataPropertyClass

def update_platform_list(selection, scenario_property, scenario_properties):
    # Ensure selection is a list of strings
    if not isinstance(selection, list) or not all(isinstance(item, str) for item in selection):
        raise TypeError("Expected selection to be a list of strings, got {}".format(type(selection).__name__))

    existing_platforms = Document.Properties[scenario_property].split(',')
    existing_platforms = [p.strip() for p in existing_platforms if p.strip()]
    new_platforms = [p.strip() for p in selection if p.strip()]

    # Remove duplicates from other scenarios
    for prop in scenario_properties:
        if prop != scenario_property:
            other_platforms = Document.Properties[prop].split(',')
            other_platforms = [p.strip() for p in other_platforms if p.strip()]
            new_platforms = [p for p in new_platforms if p not in other_platforms]
            Document.Properties[prop] = ','.join([p for p in other_platforms if p not in new_platforms])

    # Update the current scenario
    updated_platforms = list(set(existing_platforms + new_platforms))
    Document.Properties[scenario_property] = ','.join(updated_platforms)

# List of document properties for the scenarios
scenario_properties = [
    "PlatformListOutageScenario1",
    "PlatformListOutageScenario2",
    "PlatformListOutageScenario3"
]

# Get the active marking selections
marking1 = Document.ActiveMarkingSelectionReference.GetSelection("PlatformsScenario1")
marking2 = Document.ActiveMarkingSelectionReference.GetSelection("PlatformsScenario2")
marking3 = Document.ActiveMarkingSelectionReference.GetSelection("PlatformsScenario3")

# Convert the selections to lists of strings
platform_selection1 = [row.Cells["PlatformName"].Value for row in Document.Data.Tables["PLATFORM LOCATIONS"].GetRows(marking1.AsIndexSet())]
platform_selection2 = [row.Cells["PlatformName"].Value for row in Document.Data.Tables["PLATFORM LOCATIONS"].GetRows(marking2.AsIndexSet())]
platform_selection3 = [row.Cells["PlatformName"].Value for row in Document.Data.Tables["PLATFORM LOCATIONS"].GetRows(marking3.AsIndexSet())]

# Check if any platforms are selected and update the respective scenario property
if platform_selection1:
    update_platform_list(platform_selection1, "PlatformListOutageScenario1", scenario_properties)

if platform_selection2:
    update_platform_list(platform_selection2, "PlatformListOutageScenario2", scenario_properties)

if platform_selection3:
    update_platform_list(platform_selection3, "PlatformListOutageScenario3", scenario_properties)
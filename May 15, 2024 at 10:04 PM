# Assuming the data frame is loaded as df
df <- GENSACPE_STORAGE_REPORT

# Ensure Sys.Date is being called correctly and convert to POSIXct for compatibility if needed
current_date <- as.POSIXct(Sys.Date(), tz = "GMT") # Using GMT for consistency, adjust timezone as needed

# Calculate the date one year ago and four years ago in POSIXct format
one_year_ago <- current_date - (365 * 24 * 60 * 60) # Subtract seconds equivalent to one year
four_years_ago <- current_date - (4 * 365 * 24 * 60 * 60) # Subtract seconds equivalent to four years

# Filter records from the last year by converting ReportDate to POSIXct, if not already
last_year_data <- df[as.POSIXct(df$ReportDate, tz = "GMT") >= one_year_ago, ]

# Filter records from the last four years by converting ReportDate to POSIXct, if not already
four_years_data <- df[as.POSIXct(df$ReportDate, tz = "GMT") >= four_years_ago, ]

# Ensure necessary columns are present, ensure consistency
last_year_data <- last_year_data[, c("ReportDate", "Region", "StorageAmount")]
four_years_data <- four_years_data[, c("ReportDate", "Region", "StorageAmount")]

# Define the structure for min_max_data with the same columns
min_max_data <- data.frame(ReportDate = as.POSIXct(character()), Region = character(), StorageAmount = numeric(), stringsAsFactors = FALSE)

# Function to fill min_max data
calculate_min_max <- function(data) {
  month_start <- as.POSIXct(format(current_date, "%Y-%m-%d %H:%M:%S"), tz = "GMT") - (365 * 4 * 24 * 60 * 60)
  month_end <- current_date

  # Aggregate data by month and region
  month_data <- data.frame(
    month = format(data$ReportDate, "%Y-%m"),
    region = data$Region,
    storage = data$StorageAmount
  )

  if (nrow(month_data) > 0) {
    for (region in unique(month_data$region)) {
      region_data <- month_data[month_data$region == region, ]
      max_storage <- max(region_data$storage, na.rm = TRUE)
      min_storage <- min(region_data$storage, na.rm = TRUE)
      min_max_data <- rbind(
        min_max_data,
        data.frame(
          ReportDate = month_start,
          Region = paste(region, "YearMin", sep = "-"),
          StorageAmount = min_storage,
          stringsAsFactors = FALSE
        ),
        data.frame(
          ReportDate = month_start,
          Region = paste(region, "YearMax", sep = "-"),
          StorageAmount = max_storage,
          stringsAsFactors = FALSE
        )
      )
    }
  }

  return(min_max_data)
}

# Call the function on the last 4 years data
min_max_data <- calculate_min_max(four_years_data)

# Ensure both data sets have the same structure before combining
if (!all(names(last_year_data) == names(min_max_data))) {
  stop("Data frames have different structures and cannot be combined.")
}

# Combine data from the last year and the calculated min/max values
StorageReport <- rbind(last_year_data, min_max_data)

# Print out the check
print(head(StorageReport))